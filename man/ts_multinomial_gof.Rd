% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_multinomial_gof.R
\name{ts_multinomial_gof}
\alias{ts_multinomial_gof}
\title{Exact Multinomial Test of Goodness-of-Fit}
\usage{
ts_multinomial_gof(data, expCounts = NULL)
}
\arguments{
\item{data}{A vector with the data}

\item{expCounts}{Optional dataframe with the categories and expected counts}
}
\value{
Dataframe with:
\item{pObs}{probability of the observed data}
\item{ncomb}{number of combinations used}
\item{pValue}{two-sided p-value}
\item{testUsed}{a description of the test used}
}
\description{
A test that can be used with a single nominal variable, to test if the probabilities in all the categories
are equal (the null hypothesis). If the test has a p-value below a pre-defined threshold (usually 0.05) the
assumption they are all equal in the population will be rejected.

There are quite a few tests that can do this. Perhaps the most commonly used is a Pearson chi-square test,
but also a G-test, Freeman-Tukey, Neyman, Mod-Log Likelihood and Cressie-Read test are possible.

McDonald (2014, p. 82) suggests to always use this exact test as long as the sample size is less than 1000
(which was just picked as a nice round number, when n is very large the exact test becomes
computational heavy even for computers).
}
\details{
The exact multinomial test of goodness of fit is done in four steps

Step 1: Determine the probability of the observed counts using
the probability mass function of the multinomial distribution

Step 2: Determine all possible permutations with repetition
that create a sum equal to the sample size over the k-categories.

Step 3: Determine the probability of each of these permutations using the probability mass function of the multinomial distribution.

Step 4: Sum all probabilities found in step 3 that are equal or less than the one found in step 1.
}
\section{Alternatives}{


The \emph{EMT} library has a similar function: \emph{multinomial.test()}

The \emph{XNomial} library has a similar function: \emph{xmulti()}
}

\examples{
#Example 1: dataframe
dataFile = "https://peterstatistics.com/Packages/ExampleData/GSS2012a.csv"
df1 <- read.csv(dataFile, sep=",", na.strings=c("", "NA"))
ex1 = df1[1:20, 'mar1']
ts_multinomial_gof(ex1)

#Example 2: dataframe with various settings
ex2 = df1[1:20, 'mar1']
eCounts = data.frame(c("MARRIED", "DIVORCED", "NEVER MARRIED", "SEPARATED"), c(5,5,5,5))
ts_multinomial_gof(ex2, expCounts=eCounts)

#Example 3: a list
ex3 = c("MARRIED", "DIVORCED", "MARRIED", "SEPARATED", "DIVORCED", "NEVER MARRIED", 
"DIVORCED", "DIVORCED", "NEVER MARRIED", "MARRIED", "MARRIED", "MARRIED", "SEPARATED", 
"DIVORCED", "NEVER MARRIED", "NEVER MARRIED", "DIVORCED", "DIVORCED", "MARRIED")
ts_multinomial_gof(ex3)

}
\references{
McDonald, J. H. (2014). \emph{Handbook of biological statistics} (3rd ed.). Sparky House Publishing.
}
\author{
P. Stikker. \href{https://PeterStatistics.com}{Companion Website}, \href{https://www.youtube.com/stikpet}{YouTube Channel}, \href{https://www.patreon.com/bePatron?u=19398076}{Patreon donations}
}
